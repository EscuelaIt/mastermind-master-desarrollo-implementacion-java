@startuml usantatecla.mastermind
class View as "usantatecla.\nmastermind.views.\nView" 
Class Game as "usantatecla.\nmastermind.models.\nGame" 
class ConsoleView as "usantatecla.\nmastermind.views.\nconsole.ConsoleView" 
class GraphicsView as "usantatecla.\nmastermind.views.\nconsole.GraphicsView" 

abstract class  usantatecla.mastermind.Mastermind{
    # Mastermind()
    # {abstract} createView(Game): View
    # play() 
}
usantatecla.mastermind.Mastermind *-down-> View
usantatecla.mastermind.Mastermind .down.> Game

class  usantatecla.mastermind.ConsoleMastermind{
    # createView(Game): ConsoleView
    + {static} main(String[]) 
}
usantatecla.mastermind.ConsoleMastermind -up-|> usantatecla.mastermind.Mastermind
usantatecla.mastermind.ConsoleMastermind ..> ConsoleView

class  usantatecla.mastermind.GraphicsMastermind{
# createView(Game): GraphicsView
+ {static} main(String[]) 
}
usantatecla.mastermind.GraphicsMastermind -up-|> usantatecla.mastermind.Mastermind
usantatecla.mastermind.GraphicsMastermind ..> GraphicsView

@enduml

@startuml usantatecla.mastermind.views
class Error as "usantatecla.mastermind.models.\nError"{}
class Color as "usantatecla.mastermind.models.\nColor"{}
class Game as "usantatecla.mastermind.models.\nGame"{}

abstract class usantatecla.mastermind.views.WithGameView {
    + WithGameView(Game)
}
usantatecla.mastermind.views.WithGameView *-down-> Game

abstract class usantatecla.mastermind.views.ColorView{
    + {static} INITIALS: char []
    # ColorView()
    # ColorView(Color)
    + allInitials(): String
    # {abstract} resultInitials(int): String
    + {static} getInstance(char): Color
}
usantatecla.mastermind.views.ColorView *-down-> Color

abstract class usantatecla.mastermind.views.ErrorView{
    + MESSAGES: String []
    # ErrorView()
    + ErrorView(Error error)
    # {abstract} colorInitials(): String
}
usantatecla.mastermind.views.ErrorView *-down-> Error

enum usantatecla.mastermind.views.Message{
    + ATTEMPTS
    + SECRET
    + RESUME
    + RESULT
    + PROPOSED_COMBINATION
    + TITLE
    + WINNER
    + LOOSER
    - message: String
    - Message(String)
    + getMessage(): String
}

abstract class usantatecla.mastermind.views.View {
    + View(Game)
    + interact()
    # {abstract} start()
    # {abstract} propose(): boolean
    # {abstract} isNewGame(): boolean
}
usantatecla.mastermind.views.View -up-|> usantatecla.mastermind.views.WithGameView
usantatecla.mastermind.views.View .down.> Game
@enduml

@startuml usantatecla.mastermind.views.console
class Game as "usantatecla.\nmastermind.models.\nGame"
class Error as "usantatecla.\nmastermind.models.\nError"
class Result as "usantatecla.\nmastermind.models.\nResult"
enum Color as "usantatecla.\nmastermind.models.\nColor"
abstract class Combination as "usantatecla.\nmastermind.models.\nCombination"
class ProposedCombination as "usantatecla.\nmastermind.models.\nProposedCombination"
class SecretCombination as "usantatecla.\nmastermind.models.\nSecretCombination"
abstract class WithGameView as "usantatecla.\nmastermind.views.\nWithGameView"
abstract class View as "usantatecla.\nmastermind.views.\nView"
abstract class ColorView as "usantatecla.\nmastermind.views.\nColorView"
abstract class ErrorView as "usantatecla.\nmastermind.views.\nErrorView"
enum Message as "usantatecla.\nmastermind.views.\nMessage"
class Console as "usantatecla.utils.\nConsole"
class YesNoDialog as "usantatecla.utils.\nYesNoDialog"
enum ColorCode as "usantatecla.utils.\nColorCode"

class usantatecla.mastermind.views.console.ConsoleView {
    + ConsoleView(Game)
    # start()
    # propose() : boolean
    # isNewGame() : boolean
}
usantatecla.mastermind.views.console.ConsoleView -up-|> View
usantatecla.mastermind.views.console.ConsoleView *-down-> usantatecla.mastermind.views.console.StartView
usantatecla.mastermind.views.console.ConsoleView *-down-> usantatecla.mastermind.views.console.ProposalView
usantatecla.mastermind.views.console.ConsoleView *-down-> usantatecla.mastermind.views.console.ResumeView
usantatecla.mastermind.views.console.ConsoleView --> Game

class usantatecla.mastermind.views.console.ResumeView {
    ~ ResumeView(Game)
    ~ interact() : boolean
}
usantatecla.mastermind.views.console.ResumeView -up-|> WithGameView
usantatecla.mastermind.views.console.ResumeView .down.> Game
usantatecla.mastermind.views.console.ResumeView ..> Message
usantatecla.mastermind.views.console.ResumeView .> YesNoDialog

class usantatecla.mastermind.views.console.StartView {
    ~ interact()
}
usantatecla.mastermind.views.console.StartView ..> Console
usantatecla.mastermind.views.console.StartView ..> Message
usantatecla.mastermind.views.console.StartView ..> usantatecla.mastermind.views.console.SecretCombinationView

class usantatecla.mastermind.views.console.GameView {
    ~ GameView(Game)
    ~ write()
    ~ isWinnerOrLooser() : boolean
}
usantatecla.mastermind.views.console.GameView -up-|> WithGameView
usantatecla.mastermind.views.console.GameView .down.> Game
usantatecla.mastermind.views.console.GameView *-down-> usantatecla.mastermind.views.console.SecretCombinationView
usantatecla.mastermind.views.console.GameView ..> usantatecla.mastermind.views.console.AttemptsView
usantatecla.mastermind.views.console.GameView ..> usantatecla.mastermind.views.console.ResultView
usantatecla.mastermind.views.console.GameView ..> usantatecla.mastermind.views.console.ProposedCombinationView
usantatecla.mastermind.views.console.GameView ..> Message
usantatecla.mastermind.views.console.GameView ..> Console

class usantatecla.mastermind.views.console.ProposalView {
    ~ ProposalView(Game)
    ~ interact() : boolean
}
usantatecla.mastermind.views.console.ProposalView -up-|> WithGameView
usantatecla.mastermind.views.console.ProposalView .down.> Game
usantatecla.mastermind.views.console.ProposalView *-down-> usantatecla.mastermind.views.console.GameView
usantatecla.mastermind.views.console.ProposalView ..> ProposedCombination
usantatecla.mastermind.views.console.ProposalView ..> usantatecla.mastermind.views.console.ProposedCombinationView


class usantatecla.mastermind.views.console.ProposedCombinationView {
    ~ ProposedCombinationView(ProposedCombination)
    ~ write()
    ~ read()
}
usantatecla.mastermind.views.console.ProposedCombinationView *-down-> ProposedCombination
usantatecla.mastermind.views.console.ProposedCombinationView ..> usantatecla.mastermind.views.console.ErrorView
usantatecla.mastermind.views.console.ProposedCombinationView ..> usantatecla.mastermind.views.console.ColorView
usantatecla.mastermind.views.console.ProposedCombinationView ..> Color
usantatecla.mastermind.views.console.ProposedCombinationView ..> Error
usantatecla.mastermind.views.console.ProposedCombinationView ..> Combination
usantatecla.mastermind.views.console.ProposedCombinationView ..> Message
usantatecla.mastermind.views.console.ProposedCombinationView ..> Console

class usantatecla.mastermind.views.console.SecretCombinationView {
    ~ SecretCombinationView()
    ~ writeln()
}
usantatecla.mastermind.views.console.SecretCombinationView ..> SecretCombination
usantatecla.mastermind.views.console.SecretCombinationView ..> Message
usantatecla.mastermind.views.console.SecretCombinationView ..> Console

class usantatecla.mastermind.views.console.ResultView {
    ~ ResultView(Result)
    ~ writeln()
}
usantatecla.mastermind.views.console.ResultView *-down-> Result
usantatecla.mastermind.views.console.ResultView ..> Message
usantatecla.mastermind.views.console.ResultView ..> Console

class usantatecla.mastermind.views.console.AttemptsView {
    ~ AttemptsView(int)
    ~ writeln()
}
usantatecla.mastermind.views.console.AttemptsView ..> Console
usantatecla.mastermind.views.console.AttemptsView ..> Message

class usantatecla.mastermind.views.console.ColorView {
    ~ ColorView()
    ~ ColorView(Color)
    # resultInitials(int) : String
    ~ write()
}
usantatecla.mastermind.views.console.ColorView -up-|> ColorView
usantatecla.mastermind.views.console.ColorView ..> ColorCode
usantatecla.mastermind.views.console.ColorView ..> Console
usantatecla.mastermind.views.console.ColorView ..> Color

class usantatecla.mastermind.views.console.ErrorView {
    ~ ErrorView()
    ~ ErrorView(Error)
    ~ writeln()
    # colorInitials() : String
}
usantatecla.mastermind.views.console.ErrorView -up-|> ErrorView
usantatecla.mastermind.views.console.ErrorView ..> Error
usantatecla.mastermind.views.console.ErrorView ..> Console
usantatecla.mastermind.views.console.ErrorView ..> usantatecla.mastermind.views.console.ColorView
@enduml

@startuml usantatecla.mastermind.views.graphics
class Game as "usantatecla.\nmastermind.models.\nGame"
class Error as "usantatecla.\nmastermind.models.\nError"
class Result as "usantatecla.\nmastermind.models.\nResult"
enum Color as "usantatecla.\nmastermind.models.\nColor"
abstract class Combination as "usantatecla.\nmastermind.models.\nCombination"
class ProposedCombination as "usantatecla.\nmastermind.models.\nProposedCombination"
class SecretCombination as "usantatecla.\nmastermind.models.\nSecretCombination"
abstract class View as "usantatecla.\nmastermind.views.\nView"
abstract class ColorView as "usantatecla.\nmastermind.views.\nColorView"
abstract class ErrorView as "usantatecla.\nmastermind.views.\nErrorView"
enum Message as "usantatecla.\nmastermind.views.\nMessage"

package javax.swing {}
package java.awt {}

class usantatecla.mastermind.views.graphics.GraphicsView {
    + GraphicsView(Game)
    # start()
    # propose() : boolean
    # isNewGame() : boolean
}
usantatecla.mastermind.views.graphics.GraphicsView -up-|> View
usantatecla.mastermind.views.graphics.GraphicsView *-down-> usantatecla.mastermind.views.graphics.BoardView
usantatecla.mastermind.views.graphics.GraphicsView ..> Game
usantatecla.mastermind.views.graphics.GraphicsView ..> usantatecla.mastermind.views.graphics.ResumeDialog

class usantatecla.mastermind.views.graphics.BoardView {
    - {static} GAME_OVER : String
    ~ GameView(Game)
    ~ start()
    ~ propose() : boolean
    - drawGameOver() : boolean
    - clear()
}
usantatecla.mastermind.views.graphics.BoardView -up-|> javax.swing
usantatecla.mastermind.views.graphics.BoardView *-down-> Game
usantatecla.mastermind.views.graphics.BoardView *-down-> usantatecla.mastermind.views.graphics.SecretCombinationView
usantatecla.mastermind.views.graphics.BoardView *-down-> usantatecla.mastermind.views.graphics.ProposedCombinationsView
usantatecla.mastermind.views.graphics.BoardView *-down-> usantatecla.mastermind.views.graphics.ProposalCombinationView
usantatecla.mastermind.views.graphics.BoardView ..> java.awt
usantatecla.mastermind.views.graphics.BoardView ..> Message
usantatecla.mastermind.views.graphics.BoardView ..> usantatecla.mastermind.views.graphics.Constraints
usantatecla.mastermind.views.graphics.BoardView ..> ProposedCombination

class usantatecla.mastermind.views.graphics.ProposalCombinationView {
    - {static} ACCEPT : String
    - characters : String
    ~ ProposalCombinationView(JRootPane)
    ~ resetCharacters()
    ~ getCharacters() : String
    + actionPerformed(ActionEvent)
    + keyTyped(KeyEvent)
    + keyPressed(KeyEvent)
    + keyReleased(KeyEvent)
}
usantatecla.mastermind.views.graphics.ProposalCombinationView -up-|> javax.swing
usantatecla.mastermind.views.graphics.ProposalCombinationView .up.|> java.awt
usantatecla.mastermind.views.graphics.ProposalCombinationView ..> Message
usantatecla.mastermind.views.graphics.ProposalCombinationView ..> usantatecla.mastermind.views.graphics.Constraints

class usantatecla.mastermind.views.graphics.ProposedCombinationsView {
    ~ ProposedCombinationsView(Game)
    ~ add()
}
usantatecla.mastermind.views.graphics.ProposedCombinationsView -up-|> javax.swing
usantatecla.mastermind.views.graphics.ProposedCombinationsView *-down-> Game
usantatecla.mastermind.views.graphics.ProposedCombinationsView ..> usantatecla.mastermind.views.graphics.AttemptsView
usantatecla.mastermind.views.graphics.ProposedCombinationsView ..> usantatecla.mastermind.views.graphics.ProposedCombinationView
usantatecla.mastermind.views.graphics.ProposedCombinationsView ..> usantatecla.mastermind.views.graphics.ResultView
usantatecla.mastermind.views.graphics.ProposedCombinationsView ..> java.awt

class usantatecla.mastermind.views.graphics.SecretCombinationView {
    - {static} TITLE : String
    ~ SecretCombinationView()
}
usantatecla.mastermind.views.graphics.SecretCombinationView -up-|> javax.swing
usantatecla.mastermind.views.graphics.SecretCombinationView ..> Message
usantatecla.mastermind.views.graphics.SecretCombinationView ..> SecretCombination
usantatecla.mastermind.views.graphics.SecretCombinationView ..> usantatecla.mastermind.views.graphics.Constraints

class usantatecla.mastermind.views.graphics.ProposedCombinationView {
    ~ ProposedCombinationView(ProposedCombination)
    ~ ProposedCombinationView()
    ~ read(String)
    + isValid() : boolean
}
usantatecla.mastermind.views.graphics.ProposedCombinationView -up-|> javax.swing
usantatecla.mastermind.views.graphics.ProposedCombinationView *-down-> ProposedCombination
usantatecla.mastermind.views.graphics.ProposedCombinationView *-down-> Error
usantatecla.mastermind.views.graphics.ProposedCombinationView ..> Color
usantatecla.mastermind.views.graphics.ProposedCombinationView ..> Combination
usantatecla.mastermind.views.graphics.ProposedCombinationView ..> ColorView
usantatecla.mastermind.views.graphics.ProposedCombinationView ..> usantatecla.mastermind.views.graphics.ErrorView

class usantatecla.mastermind.views.graphics.AttemptsView {
    ~ AttemptsView(int)
}
usantatecla.mastermind.views.graphics.AttemptsView -up-|> javax.swing
usantatecla.mastermind.views.graphics.AttemptsView ..> Message

class usantatecla.mastermind.views.graphics.ColorView {
    ~ ColorView()
    ~ ColorView(Color)
    # resultInitials(int) : String
}
usantatecla.mastermind.views.graphics.ColorView -up-|> ColorView
usantatecla.mastermind.views.graphics.ColorView ..> Color

class usantatecla.mastermind.views.graphics.Constraints {
    ~ Constraints(int, int, int, int)
}
usantatecla.mastermind.views.graphics.Constraints -up-|> java.awt

class usantatecla.mastermind.views.graphics.ErrorView {
    ~ ErrorView()
    ~ ErrorView(Error)
    # colorInitials() : String
}
usantatecla.mastermind.views.graphics.ErrorView -up-|> ErrorView
usantatecla.mastermind.views.graphics.ErrorView ..> usantatecla.mastermind.views.graphics.ColorView
usantatecla.mastermind.views.graphics.ErrorView ..> Error

class usantatecla.mastermind.views.graphics.ResultView {
    ~ ResultView(Result)
}
usantatecla.mastermind.views.graphics.ResultView -up-|> javax.swing
usantatecla.mastermind.views.graphics.ResultView *-down-> Result
usantatecla.mastermind.views.graphics.ResultView ..> Message

class usantatecla.mastermind.views.graphics.ResumeDialog {
    - newGame : boolean
    ~ ResumeDialog()
    ~ isNewGame() : boolean
}
usantatecla.mastermind.views.graphics.ResumeDialog -down..> javax.swing
usantatecla.mastermind.views.graphics.ResumeDialog ..> Message
@enduml

@startuml usantatecla.mastermind.models
enum Color as "usantatecla.\nmastermind.types.\nColor"

abstract class usantatecla.mastermind.models.Combination {
    - {static} WIDTH: int
    # Combination()
    + {static} getWidth(): int
}
usantatecla.mastermind.models.Combination *-down-> "*" Color

class usantatecla.mastermind.models.Game {
    - {static} MAX_LONG: int
    - attempts: int
    + Game()
    + reset()
    + addProposeCombination(ProposedCombination)
    + isLooser(): boolean
    + isWinner(): boolean
    + getAttempts(): int
    + getProposedCombination(int): ProposedCombination
    + getResult(int): Result
}
usantatecla.mastermind.models.Game *-down-> usantatecla.mastermind.models.SecretCombination
usantatecla.mastermind.models.Game *-down-> "*" usantatecla.mastermind.models.Result
usantatecla.mastermind.models.Game *-down-> "*" usantatecla.mastermind.models.ProposedCombination

class usantatecla.mastermind.models.ProposedCombination {
    ~ contains(Color, int): boolean
    ~ contains(Color): boolean
    + getColors(): List<Color>
}
usantatecla.mastermind.models.ProposedCombination -up-|> usantatecla.mastermind.models.Combination
usantatecla.mastermind.models.ProposedCombination ..> Color

class usantatecla.mastermind.models.Result {
    - blacks: int
    - whites: int
    ~ Result(int, int)
    ~ isWinner(): boolean
    + getBlacks(): int
    + getWhites(): int
}

usantatecla.mastermind.models.Result ..> usantatecla.mastermind.models.Combination

class usantatecla.mastermind.models.SecretCombination {
    ~ SecretCombination()
    ~ getResult(ProposedCombination): Result
}
usantatecla.mastermind.models.SecretCombination -up-|> usantatecla.mastermind.models.Combination
usantatecla.mastermind.models.SecretCombination ..> usantatecla.mastermind.models.Result
usantatecla.mastermind.models.SecretCombination ..> usantatecla.mastermind.models.ProposedCombination
usantatecla.mastermind.models.SecretCombination ..> Color
@enduml

@startuml usantatecla.mastermind.types
enum usantatecla.mastermind.types.Color {
    + RED
    + BLUE
    + YELLOW
    + GREEN
    + ORANGE
    + PURPLE
    + NULL
    + {static} length(): int
    + isNull() : boolean
}

enum usantatecla.mastermind.types.Error {
    + DUPLICATED
    + WRONG_CHARACTERS
    + WRONG_LENGTH
    + NULL
    + isNull() : boolean
}

@enduml

@startuml usantatecla.utils
class BufferedReader as "java.io.BufferedReader"{}

enum usantatecla.utils.views.ColorCode{
+ RED
+ BLUE
+ YELLOW
+ GREEN
+ ORANGE
+ PURPLE
+ RESET_COLOR
- color: String
~ ColorCode(String)
+ getColor(): String
+ {static} getColorByIndex(int): String
}

class usantatecla.utils.views.Console{
- {static} console: Console
+ {static} getInstance(): Console
+ readString(String): String
+ readString(): String
+ readInt(String): int
+ readChar(String): char
+ writeln()
+ write(String)
+ writeln(String)
+ write(char)
- writeError(String)
}
usantatecla.utils.views.Console *-down-> BufferedReader

class  usantatecla.utils.views.YesNoDialog{
- {static} AFIRMATIVE: char
- {static} NEGATIVE: char
- {static} QUESTION: String
- {static} MESSAGE: String
+ YesNoDialog()
+ read(String): boolean
- {static} isAfirmative(char): boolean
- {static} isNegative(char): boolean
}
usantatecla.utils.views.YesNoDialog ..> usantatecla.utils.views.Console
@enduml
